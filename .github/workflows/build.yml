name: Build and release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    strategy:
      matrix:
        distro:
          - debian:bullseye
          - debian:sid
    container: ${{ matrix.distro }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - env:
          GOLANG_VERSION: '1.18'
        run: |
          set -eu

          distro_release=$(echo "${{ matrix.distro }}" | cut -d: -f2)

          if [ Xbullseye = X"${distro_release}" ]; then
              export PATH="/usr/lib/go-${GOLANG_VERSION}/bin:$PATH"
              echo deb http://deb.debian.org/debian bullseye-backports main >/etc/apt/sources.list.d/backports.list
              sed -e "s|^golang$|golang-${GOLANG_VERSION}|" deps.txt >/tmp/deps
          fi

          export DEBIAN_FRONTEND=noninteractive
          apt-get -y update
          apt-get -y upgrade
          touch /tmp/deps
          sort -u "deps.txt" /tmp/deps | xargs apt-get -y install

          sh build.sh "${GITHUB_REF_NAME}" "$(pwd)/lxd-${GITHUB_REF_NAME}-${distro_release}.tar.gz"


      - name: Upload to artifact storage
        uses: actions/upload-artifact@v2
        with:
          path: lxd-*.tar.gz
          if-no-files-found: error
          # only meant for sharing with the publish job
          retention-days: 1

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # just to satisfy gh
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2

      - run: |
          mv artifact/* .
          gh release create "${GITHUB_REF_NAME}" -n "" -t "LXD ${GITHUB_REF_NAME}" lxd-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF_NAME: ${{ env.GITHUB_REF_NAME }}
